class Solution {
public:
bool iscycle(int node,vector<int>&vis,vector<int>adj[]){
    
    if(vis[node] == 1){
        return true;
    }
    else if(!vis[node]){
    vis[node] = 1;

    for(auto it: adj[node]){
        if(iscycle(it,vis,adj)){
            return true;
        }
    }

    vis[node] = 2;
}
    return false;
}
    bool canFinish(int n, vector<vector<int>>& pre) {
        
        vector<int>adj[n];

        for(auto it: pre){
            int u = it[0];
            int v = it[1];

            adj[u].push_back(v);
        }

        vector<int>vis(n,0);

        for(int i=0;i<n;i++){
            if(!vis[i] && iscycle(i,vis,adj)){
                return false;
            }
        }
        return true;
    }
};
